// Generated by CoffeeScript 1.3.3
(function() {
  var CHECK, Map, MapView, animate, map, mapView, renderer, stage, tilesTexture;

  renderer = new PIXI.CanvasRenderer(800, 400);

  renderer.view.id = 'canvas';

  document.body.appendChild(renderer.view);

  tilesTexture = new PIXI.Texture.fromImage('dustycraft-tiles.png');

  CHECK = function(condition, message) {
    if (!condition) {
      return console.error("CHECK FAILED: " + message);
    }
  };

  Map = (function() {

    function Map(width, height) {
      var i, _i, _ref;
      this.width = width;
      this.height = height;
      this._map = new Array(this.height);
      for (i = _i = 0, _ref = this.width; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        this._map[i] = new Array(this.width);
      }
    }

    Map.prototype.get = function(x, y) {
      var cell, row;
      row = this._map[y];
      CHECK(row != null, "0 <= y < " + this.height);
      cell = row[x];
      CHECK(cell != null, "0 <= x < " + this.width);
      return cell;
    };

    Map.prototype.set = function(x, y, value) {
      var row;
      row = this._map[y];
      CHECK(row != null, "0 <= y < " + this.height);
      return row[x] = value;
    };

    Map.prototype.foreach = function(cb) {
      var x, y, _i, _ref, _results;
      _results = [];
      for (y = _i = 0, _ref = this.height; 0 <= _ref ? _i < _ref : _i > _ref; y = 0 <= _ref ? ++_i : --_i) {
        _results.push((function() {
          var _j, _ref1, _results1;
          _results1 = [];
          for (x = _j = 0, _ref1 = this.width; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; x = 0 <= _ref1 ? ++_j : --_j) {
            _results1.push(cb(x, y));
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    return Map;

  })();

  MapView = (function() {

    function MapView(map, pixelSize) {
      var _this = this;
      this.map = map;
      this.pixelSize = pixelSize;
      this.sprites = new Map(this.map.width, this.map.height);
      this.sprites.foreach(function(x, y) {
        var sprite;
        sprite = new PIXI.Sprite(tilesTexture);
        sprite.position.x = x * _this.pixelSize;
        sprite.position.y = y * _this.pixelSize;
        return _this.sprites.set(x, y, sprite);
      });
    }

    MapView.prototype.addToStage = function(stage) {
      var _this = this;
      return this.sprites.foreach(function(x, y) {
        return stage.addChild(_this.sprites.get(x, y));
      });
    };

    return MapView;

  })();

  map = new Map(10, 10);

  mapView = new MapView(map, 32);

  stage = new PIXI.Stage(0x000000);

  mapView.addToStage(stage);

  animate = function() {
    renderer.render(stage);
    return requestAnimationFrame(animate);
  };

  requestAnimationFrame(animate);

  $(document).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);

}).call(this);
